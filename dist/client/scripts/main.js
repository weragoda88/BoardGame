(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const Board_1=require("../Models/Board");class BoardBuilder{constructor(id,title,boardUIBuilder){this.board=new Board_1.Board(id,title,boardUIBuilder)}setSize(width,height){this.board.setSize(width,height);return this}setPipes(pipes){this.board.setPipes(pipes);return this}get(){return this.board}}exports.BoardBuilder=BoardBuilder},{"../Models/Board":11}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../../../helper");class HtmlBoardUIBuilder{drawBoard(board){const container=helper_1._.el(helper_1._.getBoardElementId(board.getId()));helper_1._.lg("Drawing board",board);container.classList.add("board");let count=1;const width=board.getWidth();const height=board.getHeight();for(let i=0;i<width;i++){const row=helper_1._.create(`<div class="row"></div>`);for(let j=0;j<height;j++){const cell=helper_1._.create(`<div class="cell ${board.getCellColor()}" id="${helper_1._.getCellElementId(count)}">${count++}</div>`);if(i%2===0){row.append(cell)}else{row.prepend(cell)}}container.prepend(row)}}}exports.HtmlBoardUIBuilder=HtmlBoardUIBuilder},{"../../../helper":21}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../../../helper");class HtmlDiceUIBuilder{drawDice(dice){helper_1._.lg("Drawing dice",dice);const container=helper_1._.el(helper_1._.getDiceHolderElementId());const html=helper_1._.create(`<span class="dice" title="Dice"\n         id="${helper_1._.getDiceElementId(dice.getId())}">1</span>`);container.prepend(html)}startRollingDice(dice){helper_1._.lg("Dice rolling",dice)}endRollingDice(dice,value){helper_1._.lg("Dice rolling ended",dice);const diceSpan=helper_1._.el(helper_1._.getDiceElementId(dice.getId()));diceSpan.innerHTML=`${value}`}}exports.HtmlDiceUIBuilder=HtmlDiceUIBuilder},{"../../../helper":21}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const ColorEnum_1=require("../../../Enums/ColorEnum");const helper_1=require("../../../helper");class HtmlGamePlayerUIBuilder{updateScore(player){helper_1._.lg("UpdateScore ",player);const scoreSpan=helper_1._.el(helper_1._.getPlayerScoreElementId(player.getId()));scoreSpan.innerHTML=`${player.getScore()}`}move(score,player){helper_1._.lg("Moving player ",player);const toCell=helper_1._.el(helper_1._.getCellElementId(score));let playerElement=helper_1._.el(helper_1._.getPlayerElementId(player.getId()));if(!playerElement){playerElement=this.createPlayerElement(player)}else{playerElement.remove()}toCell.appendChild(playerElement)}moveWithPipe(score,player,pipe){helper_1._.lg("moveWithPipe")}createPlayerElement(player){return helper_1._.create(`<span class="player avatar ${ColorEnum_1.Color[player.color]}" id="${helper_1._.getPlayerElementId(player.getId())}"></span>`)}}exports.HtmlGamePlayerUIBuilder=HtmlGamePlayerUIBuilder},{"../../../Enums/ColorEnum":8,"../../../helper":21}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const ColorEnum_1=require("../../../Enums/ColorEnum");const helper_1=require("../../../helper");class HtmlGameUIBuilder{constructor(container){this.container=container}drawGame(game){helper_1._.lg("Drawing game",game);this.drawBoard(game.getBoard());this.drawSideBar(game);this.drawDice(game.getDice());this.drawPlayers(game.getPlayers())}drawBoard(board){this.container.append(helper_1._.create(`<div id="${helper_1._.getBoardElementId(board.getId())}"></div>`));board.draw()}drawSideBar(game){const diceHolderId=helper_1._.getDiceHolderElementId();const sidePanel=helper_1._.create(`<div id="sidePanel"><div id="${diceHolderId}">\n        <input type="button" value="Play"/></div><div><h1>Players</h1><div id="${helper_1._.getPlayerHolderElementId()}"></div></div></div>`);this.container.append(sidePanel);helper_1._.listen(helper_1._.el(diceHolderId),"click",e=>{game.play();game.setNextPlayerIndex()})}drawDice(dice){dice.draw()}drawPlayers(payers){const playerHolder=helper_1._.el(helper_1._.getPlayerHolderElementId());let html="<ul>";payers.forEach(player=>{helper_1._.lg(player);const playerScore=player.getScore();const playerId=player.getId();html+=`<li class="player ${ColorEnum_1.Color[player.color]}">${player.getTitle()} :\n             <span id="${helper_1._.getPlayerScoreElementId(playerId)}">${playerScore}</span></li>`;if(playerScore>0){player.move(playerScore)}});html+="</ul>";playerHolder.append(helper_1._.create(html))}}exports.HtmlGameUIBuilder=HtmlGameUIBuilder},{"../../../Enums/ColorEnum":8,"../../../helper":21}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../../../helper");class HtmlPipeUIBuilder{drawPipe(pipe){helper_1._.lg("Drawing pipe ",pipe)}movePipe(id,fromIndex,toIndex){helper_1._.lg(`Moveing ${id} to ${fromIndex} ${toIndex}`)}}exports.HtmlPipeUIBuilder=HtmlPipeUIBuilder},{"../../../helper":21}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const ColorEnum_1=require("../../../Enums/ColorEnum");const PipeEnum_1=require("../../../Enums/PipeEnum");const helper_1=require("../../../helper");const Dice_1=require("../../../Models/Dice");const Game_1=require("../../../Models/Game");const GamePlayer_1=require("../../../Models/GamePlayer");const Ladder_1=require("../../../Models/Ladder");const Player_1=require("../../../Models/Player");const Snake_1=require("../../../Models/Snake");const BoardBuilder_1=require("../../BoardBuilder");const HtmlBoardUIBuilder_1=require("./HtmlBoardUIBuilder");const HtmlDiceUIBuilder_1=require("./HtmlDiceUIBuilder");const HtmlGamePlayerUIBuilder_1=require("./HtmlGamePlayerUIBuilder");const HtmlGameUIBuilder_1=require("./HtmlGameUIBuilder");const HtmlPipeUIBuilder_1=require("./HtmlPipeUIBuilder");class HtmlUIBuilder{constructor(gameSocketClient,currentUserId,container){gameSocketClient.uiBuilder=this;this.gameSocketClient=gameSocketClient;this.currentUserId=currentUserId;this.gameUIBuilder=new HtmlGameUIBuilder_1.HtmlGameUIBuilder(container);this.boardUIBuilder=new HtmlBoardUIBuilder_1.HtmlBoardUIBuilder;this.pipeUIBuilder=new HtmlPipeUIBuilder_1.HtmlPipeUIBuilder;this.diceUIBuilder=new HtmlDiceUIBuilder_1.HtmlDiceUIBuilder;this.gamePlayerUIBuilder=new HtmlGamePlayerUIBuilder_1.HtmlGamePlayerUIBuilder}buildGame(gameId,players){this.game=new Game_1.Game(gameId,"test Game",new BoardBuilder_1.BoardBuilder("1","test",this.boardUIBuilder).setSize(10,10).setPipes(this.getPipes()).get(),new Dice_1.Dice("1","1",6,this.diceUIBuilder),players.length>0?players:this.getPlayers(),this.gameUIBuilder);this.game.start();this.game.setNextPlayer(this.currentUserId)}getPlayer(id,color){return new GamePlayer_1.GamePlayer(id,`Player ${id}`,new Player_1.Player(id,`Player ${id}`),color,0,this.gamePlayerUIBuilder)}playerJoined(){helper_1._.lg("playerJoined")}startGame(){helper_1._.lg("startGame")}nextPlayer(){helper_1._.lg("nextPlayer")}startPlaying(){helper_1._.lg("startPlaying")}startRolling(){helper_1._.lg("startRolling")}endRolling(){helper_1._.lg("endRolling")}movePlayer(){helper_1._.lg("movePlayer")}movePlayerWithPipe(){helper_1._.lg("movePlayerWithPipe")}setScore(){helper_1._.lg("setScore")}endGame(){helper_1._.lg("endGame")}getPipes(){const pipes=[];const pipeBuilder=this.pipeUIBuilder;pipes.push(new Snake_1.Snake("1","Snake 1",10,3,PipeEnum_1.SnakeType.Snake1,pipeBuilder));pipes.push(new Snake_1.Snake("2","Snake 2",35,7,PipeEnum_1.SnakeType.Snake2,pipeBuilder));pipes.push(new Ladder_1.Ladder("3","Ladder 1",7,9,PipeEnum_1.LadderType.Ladder1,pipeBuilder));return pipes}getPlayers(){const players=[];players.push(this.getPlayer("1",ColorEnum_1.Color.Red));players.push(this.getPlayer("2",ColorEnum_1.Color.Blue));return players}}exports.HtmlUIBuilder=HtmlUIBuilder},{"../../../Enums/ColorEnum":8,"../../../Enums/PipeEnum":9,"../../../Models/Dice":12,"../../../Models/Game":13,"../../../Models/GamePlayer":14,"../../../Models/Ladder":15,"../../../Models/Player":17,"../../../Models/Snake":18,"../../../helper":21,"../../BoardBuilder":1,"./HtmlBoardUIBuilder":2,"./HtmlDiceUIBuilder":3,"./HtmlGamePlayerUIBuilder":4,"./HtmlGameUIBuilder":5,"./HtmlPipeUIBuilder":6}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Color;(function(Color){Color[Color["Red"]=1]="Red";Color[Color["Blue"]=2]="Blue"})(Color=exports.Color||(exports.Color={}))},{}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var PipeType;(function(PipeType){PipeType[PipeType["Snake"]=1]="Snake";PipeType[PipeType["Ladder"]=2]="Ladder"})(PipeType=exports.PipeType||(exports.PipeType={}));var SnakeType;(function(SnakeType){SnakeType[SnakeType["Snake1"]=1]="Snake1";SnakeType[SnakeType["Snake2"]=2]="Snake2"})(SnakeType=exports.SnakeType||(exports.SnakeType={}));var LadderType;(function(LadderType){LadderType[LadderType["Ladder1"]=1]="Ladder1";LadderType[LadderType["Ladder2"]=2]="Ladder2"})(LadderType=exports.LadderType||(exports.LadderType={}))},{}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});class Base{constructor(id,title){this.id=id;this.title=title}getId(){return this.id}getTitle(){return this.title}}exports.Base=Base},{}],11:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const BaseModel_1=require("./BaseModel");class Board extends BaseModel_1.Base{constructor(id,title,boardUIBuilder){super(id,title);this.boardUIBuilder=boardUIBuilder}getWidth(){return this.width}getHeight(){return this.height}setSize(width,height){this.width=width;this.height=height}setPipes(pipes){this.pipes=pipes}draw(){this.drawBoard();this.drawPipes()}getMatchingPipe(index){return this.pipes.find(p=>p.isFromIndex(index))}getCellColor(){const num=Math.floor(Math.random()*10)+1;switch(num){case 1:return"color1";case 2:return"color2";case 3:return"color3";case 4:return"color4";case 5:return"color5";case 6:return"color6";case 7:return"color7";case 8:return"color8";case 9:return"color9";default:return"color10"}}drawBoard(){this.boardUIBuilder.drawBoard(this)}drawPipes(){this.pipes.forEach(pipe=>{pipe.draw()})}}exports.Board=Board},{"./BaseModel":10}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const BaseModel_1=require("./BaseModel");class Dice extends BaseModel_1.Base{constructor(id,title,max,diceUiBuilder){super(id,title);this.max=max;this.diceUiBuilder=diceUiBuilder}draw(){this.diceUiBuilder.drawDice(this)}roll(){this.diceUiBuilder.startRollingDice(this);let value=Math.floor(Math.random()*Math.floor(this.max));if(value===0){value=1}this.diceUiBuilder.endRollingDice(this,value);return value}}exports.Dice=Dice},{"./BaseModel":10}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../helper");const BaseModel_1=require("./BaseModel");class Game extends BaseModel_1.Base{constructor(id,title,board,dice,palyers,gameBuilder){super(id,title);this.players=palyers;this.board=board;this.dice=dice;this.nextPlayerIndex=-1;this.gameBuilder=gameBuilder}getBoard(){return this.board}getDice(){return this.dice}getPlayers(){return this.players}start(){this.gameBuilder.drawGame(this)}addPlayer(player){this.players.push(player)}setNextPlayer(nextPlayerId){const player=this.getPlayer(nextPlayerId);if(!player){throw Error(`No player with this id: ${nextPlayerId}`)}this.nextPlayerIndex=this.players.indexOf(player)}play(){if(this.nextPlayerIndex<0){throw Error("Next player not set")}const player=this.players[this.nextPlayerIndex];const diceValue=this.dice.roll();let tempScore=player.getScore()+diceValue;if(tempScore>100){return}else if(tempScore===100){alert(`${player.getTitle()} won.`)}helper_1._.lg("Playing",player);player.move(tempScore);const pipe=this.board.getMatchingPipe(tempScore);if(pipe){tempScore=pipe.getToIndex(tempScore);player.moveWithPipe(tempScore,pipe)}player.setScore(tempScore)}setNextPlayerIndex(){this.nextPlayerIndex++;if(this.nextPlayerIndex===this.players.length){this.nextPlayerIndex=0}return this.players[this.nextPlayerIndex]}getPlayer(id){return this.players.find(p=>p.getId()===id)}}exports.Game=Game},{"../helper":21,"./BaseModel":10}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const BaseModel_1=require("./BaseModel");class GamePlayer extends BaseModel_1.Base{constructor(id,title,player,color,score,gamePlayerUIBuilder){super(id,title);this.player=player;this.color=color;this.score=score;this.gamePlayerUIBuilder=gamePlayerUIBuilder}getScore(){return this.score}setScore(score){this.score=score;this.gamePlayerUIBuilder.updateScore(this)}move(score){this.gamePlayerUIBuilder.move(score,this)}moveWithPipe(score,pipe){this.gamePlayerUIBuilder.moveWithPipe(score,this,pipe)}}exports.GamePlayer=GamePlayer},{"./BaseModel":10}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const PipeEnum_1=require("../Enums/PipeEnum");const Pipe_1=require("./Pipe");class Ladder extends Pipe_1.Pipe{constructor(id,name,fromIndex,toIndex,ladderType,pipeUIBuilder){super(id,name,fromIndex,toIndex,PipeEnum_1.PipeType.Ladder,pipeUIBuilder);this.validateIndex(fromIndex,toIndex);this.ladderType=ladderType}draw(){super.draw()}move(fromIndex,toIndex){this.validateIndex(fromIndex,toIndex);super.move(fromIndex,toIndex)}validateIndex(fromIndex,toIndex){if(fromIndex>toIndex){throw new Error("toIndex have to be larger than fromIndex")}}}exports.Ladder=Ladder},{"../Enums/PipeEnum":9,"./Pipe":16}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const BaseModel_1=require("./BaseModel");class Pipe extends BaseModel_1.Base{constructor(id,title,fromIndex,toIndex,pripeType,pipeUIBuilder){super(id,title);this.fromIndex=fromIndex;this.toIndex=toIndex;this.pripeType=pripeType;this.pipeUIBuilder=pipeUIBuilder}isFromIndex(index){return this.fromIndex===index}getToIndex(index){if(this.isFromIndex(index)){return this.toIndex}return 0}draw(){this.pipeUIBuilder.drawPipe(this)}move(fromIndex,toIndex){this.fromIndex=fromIndex;this.toIndex=toIndex;this.pipeUIBuilder.movePipe(this.id,fromIndex,toIndex)}}exports.Pipe=Pipe},{"./BaseModel":10}],17:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const BaseModel_1=require("./BaseModel");class Player extends BaseModel_1.Base{constructor(id,name){super(id,name)}}exports.Player=Player},{"./BaseModel":10}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const PipeEnum_1=require("../Enums/PipeEnum");const Pipe_1=require("./Pipe");class Snake extends Pipe_1.Pipe{constructor(id,name,fromIndex,toIndex,snakeType,pipeUIBuilder){super(id,name,fromIndex,toIndex,PipeEnum_1.PipeType.Snake,pipeUIBuilder);this.validateIndex(fromIndex,toIndex);this.snakeType=snakeType}draw(){super.draw()}move(fromIndex,toIndex){this.validateIndex(fromIndex,toIndex);super.move(fromIndex,toIndex)}validateIndex(fromIndex,toIndex){if(fromIndex<toIndex){throw new Error("fromIndex have to be larger than toIndex")}}}exports.Snake=Snake},{"../Enums/PipeEnum":9,"./Pipe":16}],19:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../helper");const WebSocketClient_1=require("./WebSocketClient");class GameSocketClient extends WebSocketClient_1.WebSocketClient{constructor(url){super(url);this.initMethods()}initMethods(){this.methods={sendMsg(data){helper_1._.lg("sendMsg",data)},playerJoined(player){this.uiBuilder.playerJoined();helper_1._.lg("playerJoined",player)},startGame(){this.uiBuilder.startGame();helper_1._.lg("startGame")},nextPlayer(player){this.uiBuilder.nextPlayer();helper_1._.lg("nextPlayer",player)},startPlaying(player){this.uiBuilder.startPlaying();helper_1._.lg("startPlaying",player)},startRolling(player){this.uiBuilder.startRolling();helper_1._.lg("startRolling",player)},endRolling(player){this.uiBuilder.endRolling();helper_1._.lg("endRolling",player)},movePlayer(player){this.uiBuilder.movePlayer();helper_1._.lg("movePlayer",player)},movePlayerWithPipe(player){this.uiBuilder.movePlayerWithPipe();helper_1._.lg("movePlayerWithPipe",player)},setScore(player){this.uiBuilder.setScore();helper_1._.lg("setScore",player)},endGame(winner){this.uiBuilder.endGame();helper_1._.lg("endGame",winner)}}}}exports.GameSocketClient=GameSocketClient},{"../helper":21,"./WebSocketClient":20}],20:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const helper_1=require("../helper");class WebSocketClient{constructor(url){this.connection=new WebSocket(url);this.listen()}listen(){this.connection.onmessage=(ev=>{const object=JSON.parse(ev.data);if(object){this.methods[object.event](object.data)}})}send(){helper_1._.lg("send")}}exports.WebSocketClient=WebSocketClient},{"../helper":21}],21:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._={getBoardElementId(id){return`gameBoard-${id}`},getDiceHolderElementId(){return`gameDiceHolder`},getDiceElementId(id){return`gameDice-${id}`},getPlayerHolderElementId(){return`playersHolder`},getPlayerElementId(id){return`player-${id}`},getPlayerScoreElementId(id){return`player-score-${id}`},getCellElementId(id){return`cell-${id}`},el(id){return document.getElementById(id)},lg(...params){console.log(...params)},create(html){const template=document.createElement("template");template.innerHTML=html;return template.content.firstElementChild},listen(element,type,func){element.addEventListener(type,func)}}},{}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const HtmlUIBuilder_1=require("./Builders/UIBuilders/HtmlBuilders/HtmlUIBuilder");const ColorEnum_1=require("./Enums/ColorEnum");const helper_1=require("./helper");const GameSocketClient_1=require("./WebSockets/GameSocketClient");function buildGame(game){game.start();game.setNextPlayer("1")}function getHtmlUIBuilder(userId){const gameSocketClient=new GameSocketClient_1.GameSocketClient("ws://localhost:8080/");return new HtmlUIBuilder_1.HtmlUIBuilder(gameSocketClient,userId,helper_1._.el("container"))}function start(gameId,uiBuilder,players){uiBuilder.buildGame(gameId,players)}function join(id,userId){helper_1._.lg(id);const uiBuilder=getHtmlUIBuilder(userId);start(id,uiBuilder,[uiBuilder.getPlayer(userId,ColorEnum_1.Color.Red)])}const urlParams=new URLSearchParams(window.location.search);const uId=urlParams.get("userId")||"1";if(urlParams.has("id")){join(urlParams.get("id"),uId)}else{start("1",getHtmlUIBuilder(uId),[])}},{"./Builders/UIBuilders/HtmlBuilders/HtmlUIBuilder":7,"./Enums/ColorEnum":8,"./WebSockets/GameSocketClient":19,"./helper":21}]},{},[22]);
